{
	"info": {
		"_postman_id": "gin-blog-api-collection",
		"name": "Gin Blog API",
		"description": "个人博客系统API接口测试集合",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "健康检查",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has correct structure\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('code');",
							"    pm.expect(jsonData).to.have.property('message');",
							"    pm.expect(jsonData).to.have.property('data');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "用户注册",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Registration successful\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.data).to.have.property('user_id');",
							"    pm.expect(jsonData.data).to.have.property('username');",
							"    pm.expect(jsonData.data).to.have.property('email');",
							"    ",
							"    // 保存用户ID到环境变量",
							"    pm.environment.set(\"user_id\", jsonData.data.user_id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{test_username}}\",\n    \"password\": \"password123\",\n    \"email\": \"{{test_email}}\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "用户登录",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Login successful\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.data).to.have.property('token');",
							"    pm.expect(jsonData.data).to.have.property('user_id');",
							"    ",
							"    // 保存token到环境变量",
							"    pm.environment.set(\"token\", jsonData.data.token);",
							"    pm.environment.set(\"user_id\", jsonData.data.user_id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{test_username}}\",\n    \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"User profile retrieved\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('username');",
							"    pm.expect(jsonData.data).to.have.property('email');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/user/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"user",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "创建文章",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Post created successfully\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('title');",
							"    pm.expect(jsonData.data).to.have.property('content');",
							"    ",
							"    // 保存文章ID到环境变量",
							"    pm.environment.set(\"post_id\", jsonData.data.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"我的第一篇博客文章\",\n    \"content\": \"这是一篇测试文章的内容，包含了丰富的文本信息。文章内容可以很长，支持多段落的文本。\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/posts",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取文章列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Posts list retrieved\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.data).to.have.property('total');",
							"    pm.expect(jsonData.data).to.have.property('page');",
							"    pm.expect(jsonData.data).to.have.property('page_size');",
							"    pm.expect(jsonData.data).to.have.property('data');",
							"    pm.expect(jsonData.data.data).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/posts?page=1&page_size=10",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"posts"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "page_size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取单个文章",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Post retrieved successfully\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('title');",
							"    pm.expect(jsonData.data).to.have.property('content');",
							"    pm.expect(jsonData.data).to.have.property('username');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/posts/{{post_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "更新文章",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Post updated successfully\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.data.title).to.eql(\"更新后的文章标题\");",
							"    pm.expect(jsonData.data.content).to.include(\"更新后的文章内容\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"更新后的文章标题\",\n    \"content\": \"这是更新后的文章内容，包含了新的信息和修改。\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/posts/{{post_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "创建评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Comment created successfully\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('content');",
							"    pm.expect(jsonData.data).to.have.property('post_id');",
							"    ",
							"    // 保存评论ID到环境变量",
							"    pm.environment.set(\"comment_id\", jsonData.data.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"content\": \"这是一条测试评论，对文章内容进行了评价和讨论。\",\n    \"post_id\": {{post_id}}\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/comments",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取文章评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Comments retrieved successfully\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.data).to.have.property('total');",
							"    pm.expect(jsonData.data).to.have.property('data');",
							"    pm.expect(jsonData.data.data).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/comments/post/{{post_id}}?page=1&page_size=10",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"comments",
						"post",
						"{{post_id}}"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "page_size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "删除评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Comment deleted successfully\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.message).to.include(\"删除成功\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/comments/{{comment_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"comments",
						"{{comment_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "删除文章",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Post deleted successfully\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.message).to.include(\"删除成功\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/posts/{{post_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "错误测试 - 未授权访问",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Unauthorized access blocked\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(401);",
							"    pm.expect(jsonData.message).to.include(\"认证\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/user/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"user",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "错误测试 - 访问不存在的文章",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Post not found\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(404);",
							"    pm.expect(jsonData.message).to.include(\"不存在\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/posts/999",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"posts",
						"999"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// 设置基础URL",
					"pm.globals.set(\"base_url\", \"http://localhost:8080\");",
					"",
					"// 生成随机测试数据",
					"const randomString = Math.random().toString(36).substring(7);",
					"pm.globals.set(\"random_string\", randomString);",
					"pm.globals.set(\"test_username\", \"testuser_\" + randomString);",
					"pm.globals.set(\"test_email\", \"test_\" + randomString + \"@example.com\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Collection级别的测试后处理",
					"console.log('Request completed: ' + pm.info.requestName);"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "post_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "comment_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_username",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_email",
			"value": "",
			"type": "string"
		}
	]
}